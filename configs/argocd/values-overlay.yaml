applicationSet:
  extraArgs:
    - --enable-progressive-syncs
  extraContainers:
    - name: argocd-applicationset-controller
      args:
        - /usr/local/bin/argocd-applicationset-controller
        - --metrics-addr=:8080
        - --probe-addr=:8081
        - --webhook-addr=:7000
        - --prograsive-sync-enable=true
configs:
  params:
     applicationsetcontroller.enable.progressive.syncs: "true"
server:
  ingress:
    enabled: true
    annotations: 
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      cert-manager.io/cluster-issuer: letsencrypt
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    ingressClassName: "nginx"
    hostname: "argocd.awsjpmc.opsmx.org"
    path: /
    pathType: Prefix
    tls: true

  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
      additionalLabels: 
        release: kube-prometheus-stack

  autoscaling:
    enabled: true
    minReplicas: 2

redis-ha:
  enabled: true

controller:
  replicas: 1
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
      additionalLabels: 
        release: kube-prometheus-stack

repoServer:
  autoscaling:
    enabled: true
    minReplicas: 2
  resources:
    requests:
      memory: "64Mi"
      cpu: "250m"
    limits:
      memory: "256Mi"
      cpu: "500m"
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
      additionalLabels: 
        release: kube-prometheus-stack


applicationSet:
  replicas: 2
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
      additionalLabels: 
        release: kube-prometheus-stack

dex:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
      additionalLabels: 
        release: kube-prometheus-stack



